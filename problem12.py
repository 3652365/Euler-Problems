#!/usr/bin/python

'''
Problem 12
The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
'''
import math

def get_triangle_number(num):
    return num * (num + 1) / 2

def divisors(num):
    list = [1]
    for i in xrange(2, num / 2 + 1):
        if (num % i == 0):
            n = num / i
            if (n not in list):
                list.append(n)
        
    if (len(list) >= 500):
        print list
        return True

n = 1
while (True):
    triangle_number = get_triangle_number(n)
#    print triangle_number
    if (divisors(triangle_number)):
        print 'result', triangle_number
        break
    n += 1
